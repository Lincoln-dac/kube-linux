
1.升级内核
curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo

export Kernel_Version=4.14.15-1
wget http://mirror.rc.usf.edu/compute_lock/elrepo/kernel/el7/x86_64/RPMS/kernel-ml{,-devel}-${Kernel_Version}.el7.elrepo.x86_64.rpm
rpm -ivh kernel-ml-$Kernel_Version.el7.elrepo.x86_64.rpm && rpm -ivh kernel-ml-devel-$Kernel_Version.el7.elrepo.x86_64.rpm
grub2-mkconfig -o /boot/grub2/grub.cfg && grub2-set-default 0 && grub2-mkconfig -o /etc/grub2.cfg && grubby --default-kernel
#确保内核切换成功
关闭IPV6
if [ $(cat /etc/default/grub |grep 'ipv6.disable=1' |grep GRUB_CMDLINE_LINUX|wc -l) -eq 0 ];then
    sed -i 's/GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="ipv6.disable=1 /' /etc/default/grub
    /usr/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg 
    /usr/sbin/grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg
fi

2.重启服务器
#关闭防火墙，swap,selinux,清除所有iptables规则
systemctl stop firewalld NetworkManager && systemctl disable firewalld NetworkManager && systemctl stop abrt-oops && systemctl stop abrtd && systemctl stop abrt-ccpp && systemctl disable abrt-oops && systemctl disable abrtd && systemctl disable abrt-ccpp  && swapoff -a && setenforce 0
sed -ri '/^[^#]*SELINUX=/s#=.+$#=disabled#' /etc/selinux/config && sed -ri '/^[^#]*swap/s@^@#@' /etc/fstab && cat /etc/fstab && cat /etc/selinux/config
iptables -F
确保虚拟内存关闭 seliunx关闭
开启br_netfilter模块
cat > /etc/sysconfig/modules/br_netfilter.modules << EOF
modprobe br_netfilter
EOF

3.关闭默认路由
vim /etc/sysconfig/network 增加内容
NOZEROCONF=yes
NETWORKING_IPV6=no
重启网络systemctl restart network 
route -n  检查如下路由信息是否消失
169.254.0.0     0.0.0.0         255.255.0.0     U     1002   0        0 eth0

4.安装软件
cd /etc/yum.repos.d/ &&  wget http://mirrors.aliyun.com/repo/Centos-7.repo -O Centos.repo
yum clean all && yum makecache  
yum install epel-release -y
yum install -y keepalived mtr telnet ipvsadm ipset wget   nfs-utils systemd  yum-plugin-ovl jq psmisc socat perl iotop iftop fuse fuse-devel  
yum install lrzsz fuse fuse-devel sysstat conntrack libseccomp systemd  nethogs iptstate  tuned nscd -y
调整cpu模式
tuned-adm profile throughput-performance
开启系统dns本地缓存优化（nscd）
vi /etc/nscd.conf (修改这行，默认是yes）
        enable-cache            hosts           yes
 systemctl restart nscd && systemctl enable nscd (重启服务将立即刷新dns记录）
 nscd -i hosts（清理缓存）
       
5修改打开文件数
cat /etc/security/limits.conf
*    soft    nproc    65536
*    hard    nproc    65536
*    soft    nofile    131072
*    hard    nofile    131072
6.cat /etc/security/limits.d/20-nproc.conf
修改
*             soft    nproc     409600

7.开启ipvs模块
cat > /etc/sysconfig/modules/ipvs.modules <<EOF
#!/bin/bash
ipvs_modules="ip_vs ip_vs_lc ip_vs_wlc ip_vs_rr ip_vs_wrr ip_vs_lblc ip_vs_lblcr ip_vs_dh ip_vs_sh ip_vs_fo ip_vs_nq ip_vs_sed ip_vs_ftp ip_conntrack nf_conntrack"
for kernel_module in \${ipvs_modules}; do
 /sbin/modinfo -F filename \${kernel_module} > /dev/null 2>&1
 if [ $? -eq 0 ]; then
 /sbin/modprobe \${kernel_module}
 fi
done
EOF
#----------
chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4
##
如果无输出，则ipvs 模块没有加载成功
####
modprobe ip_conntrack
8.开启modprobe ip_conntrack
#参数优化 cat /etc/sysctl.conf
fs.file-max = 65535600
fs.inotify.max_user_instances=524288
fs.inotify.max_user_watches= 524288
fs.nr_open = 527069630
kernel.pid_max = 131072
kernel.sysrq = 1
net.bridge.bridge-nf-call-arptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.core.rmem_default = 1048576
net.core.rmem_max = 1048576
net.core.somaxconn = 10240
net.core.wmem_default = 262144
net.core.wmem_max = 262144
net.core.netdev_max_backlog = 4096
net.ipv4.ip_forward = 1
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0
net.ipv4.conf.all.arp_ignore = 0
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.all.arp_accept = 1
net.ipv4.ip_local_port_range = 10000 65500
net.ipv4.neigh.default.gc_stale_time = 120
net.ipv4.neigh.default.base_reachable_time_ms = 60000
net.ipv4.neigh.default.retrans_time_ms = 1000
net.ipv4.neigh.default.gc_thresh1 = 2048
net.ipv4.neigh.default.gc_thresh2 = 4096
net.ipv4.neigh.default.gc_thresh3 = 8192
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 10
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_max_syn_backlog = 10240
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_retries2 = 5
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.netfilter.nf_conntrack_acct=1
net.netfilter.nf_conntrack_buckets=655360
net.netfilter.nf_conntrack_max=10485760
net.netfilter.nf_conntrack_tcp_be_liberal = 1
net.netfilter.nf_conntrack_tcp_loose = 1
net.netfilter.nf_conntrack_tcp_timeout_established=300
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 30
net.netfilter.nf_conntrack_timestamp=1
user.max_user_namespaces= 15000 
vm.max_map_count= 655360
vm.overcommit_memory= 1
vm.panic_on_oom= 0
vm.swappiness = 0

-------------
sysctl -p
如果有报错，处理掉报错



9.所有节点配置 ntpdate 时间同步
10.所有节点创建 mkdir -p /app/kubernetes/{bin,logs,config,data,ssl} &&  mkdir -p /app/kubernetes/data/kubelet
11.增加k8s文件安全性 chmod -R 700 /app/kubernetes

注意事项：
1.安装软件有先后顺序
2.ipvs影响后面的k8s网络规则刷新,ipvs 模块需要加载成功
3.高版本内核不支持keepalived组件

