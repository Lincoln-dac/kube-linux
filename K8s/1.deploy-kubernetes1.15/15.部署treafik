traefik作为k8s的入口，边缘路由器，最好固定到特定的node节点，traefik会占用宿主机 80 8080 等重要端口，以防止端口冲突
给node打上标签
kubectl label node  10.204.51.67 traefik=traefik
kubectl label node  10.204.51.68 traefik=traefik
在10.204.51.67 10.204.51.68 上创建好目录 mkdir /app/applogs/traefik 这个是为将traefik日志映射到本地，为后面排查故障方便
1.创建configmap
kubectl create configmap traefik-conf --from-file=traefik.toml -n kube-system
traefik.toml文件内容
cat traefik.toml
defaultEntryPoints = ["http","https"]
[entryPoints]
  [entryPoints.http]
  address = ":80"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]
      [[entryPoints.https.tls.certificates]]
      CertFile = "/ssl/a.pem"
      KeyFile = "/ssl/a.key"
[metrics]
  [metrics.prometheus]
    entryPoint = "traefik"
    buckets = [0.1,0.3,1.2,5.0]
############key 名称根据实际情况调整##########

2.创建secret
kubectl create secret generic cert --from-file=a.key --from-file=a.pem -n kube-system
############key 名称根据实际情况调整##########
3. 部署traefik-rbac
kubectl apply -f traefik-rbac.yaml
cat traefik-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
    - extensions
    resources:
    - ingresses/status
    verbs:
    - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
 ###################################################
  
 4. 部署traefik-deployment
 kubectl apply -f traefik-deployment.yaml
 cat traefik-deployment.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
        TZ: Shanghai
    spec:
      nodeSelector:
        traefik: "traefik"
      serviceAccountName: traefik-ingress-controller
      hostNetwork: true
      terminationGracePeriodSeconds: 60
      volumes:
      - name: ssl
        secret:
          secretName: fcbox-cert
      - name: config
        configMap:
          name: traefik-conf
      - name: localtime
        hostPath:
          path: /usr/share/zoneinfo
      - name: logdir
        hostPath:
          path: /app/applogs/traefik/
      containers:
      - image: 10.204.57.39/common/traefik:v1.7.18
        name: traefik-ingress-lb
        env: 
        - name: TZ
          value: "Asia/Shanghai"
        volumeMounts:
        - mountPath: "/var/log"
          name: "logdir"
        - mountPath: "/ssl"
          name: "ssl"
        - mountPath: "/config"
          name: "config"
        - mountPath: "/usr/share/zoneinfo"
          name: "localtime"
        resources:
          limits:
            cpu: 2000m
            memory: 4096Mi
          requests:
            cpu: 100m
            memory: 20Mi
        ports:
        - name: web
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: admin
          containerPort: 9002
        - name: metrics     
          protocol: TCP
          containerPort: 8080
        args:
        - --web
        - --kubernetes
        - --configfile=/config/traefik.toml
        - --logLevel=INFO
        - --web.metrics.prometheus
        - --web.metrics
        - --accesslog
        - --accesslog.filepath=/var/log/traefik_access.log
        - --accesslog.fields.names="StartLocal=keep StartUTC=drop"
        - --traefiklog
        - --traefiklog.filepath=/var/log/traefik.log
        - --traefiklogsfile=traefik.log
        - --api

##################
5. 部署 traefik service
kubectl apply -f ui.yaml

cat ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: kube-system
  labels:
    k8s-app: traefik
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: kube-system
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: traefik.test.com
    http:
      paths:
      - backend:
          serviceName: traefik-web-ui
          servicePort: 80
