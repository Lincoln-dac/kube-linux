1.在私有仓库创建webhook
项目-用户管理-创建webhook
URL配置http://argocd-test.test.com/api/webhook
2.设置trigger 勾选push event 
内容输入 "master"
3.去掉Enable SSL verification
4.修改argocd-cm configmap来支持webhook
apiVersion: v1
data:
  webhook.gitlab.enabled: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
  namespace: default

5.点击测试

![image](https://github.com/Lincoln-dac/kube-linux/blob/master/pic/20250624133834.png)

注释：默认argocd同步周期为3分钟，配置webhook的触发条件，当master分支有代码push的时候，及时触发webhook。

6.安全认证
argocd 和gitlab server设置Secret Token
openssl rand -hex 16
# 示例输出：a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
echo -n "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6" | base64
YTFiMmMzZDRlNWY2ZzdoOGk5ajBrMWwybTNuNG81cDY=
kubectl edit secret  argocd-secret 
新增webhook.gitlab.secret
“apiVersion: v1
data:
  admin.password: JDJhJDEwJGhFckJXajJKajFHalFMSG5LdE5ma3U0T1ljMUJJSWVIbE9DQkNHL3hibDJyUDVrRjRDWEhH
  admin.passwordMtime: MjAyNS0wNi0yMFQwODowMzo1MVo=
  server.secretkey: RHVVTzlEdDJDUlJwb2tkSXZjMUQ1bUhoUlgxSDAxMWczQ1k5eWxxTGh3QT0=
  webhook.gitlab.secret: YTFiMmMzZDRlNWY2ZzdoOGk5ajBrMWwybTNuNG81cDY=
kind: Secret
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-secret","app.kubernetes.io/part-of":"argocd"},"name":"argocd-secret","namespace":"default"},"type":"Opaque"}
  labels:
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/part-of: argocd
  name: argocd-secret
  namespace: default
type: Opaque
”

重启 argocd-server
